public class MyInterceptor implements ClientHttpRequestInterceptor {

    private static final Logger logger = LoggerFactory.getLogger(MyInterceptor.class);

    @Override
    public ClientHttpResponse intercept(HttpRequest request, byte[] body, ClientHttpRequestExecution execution) throws IOException {
        
		logger.info("Request URI: {}", request.getURI());
        logger.info("Request method: {}", request.getMethod());
        logger.info("Request headers: {}", request.getHeaders());
        logger.info("Request body: {}", new String(body, StandardCharsets.UTF_8));

        ClientHttpResponse response = execution.execute(request, body);

        logger.info("Response status code: {}", response.getStatusCode());
        logger.info("Response headers: {}", response.getHeaders());
		
		//Read the response body from the input stream
		InputStream inputStream = response.getBody();
		String responseBody = new BufferedReader(new InputStreamReader(inputStream)) .lines().collect(Collectors.joining("\n"));
        logger.info("Response body: {}", responseBody);

        return response;
    }
}

@Configuration
public class MyConfig {

    @Bean
    public RestTemplate restTemplate() {
        RestTemplate restTemplate = new RestTemplate();
        restTemplate.setInterceptors(Collections.singletonList(new MyInterceptor()));
        return restTemplate;
    }
}